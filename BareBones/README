A simple kernel for 32-bit x86
(This tutorial is inspired of https://wiki.osdev.org/Bare_Bones)

In this tutorial, I use:
    - The GNU Linker from Binutils to link our object files into the final kernel.
    - The GNU Assembler from Binutils (or optionally NASM) to assemble instructions into object files containing machine code.
    - The GNU Compiler Collection to compile our high level code into assembly.
    - The C programming language (or optionally C++) to write the high level parts of our kernel.
    - The GRUB bootloader to bootload our kernel using the Multiboot boot protocol that loads us into 32-bit protected mode with paging disabled.
    - The ELF as the executable format that gives us control of where and how the kernel is loaded. 

Requirement software:
    - Cross compiler for i686-elf
    - GRUB bootloader
    - xorriso 